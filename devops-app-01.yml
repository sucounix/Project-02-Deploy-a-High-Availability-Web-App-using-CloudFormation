Description: >
    Suco  / Udacity
    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
    and default routes for them in the private subnets.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VpcCIDR: 
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.0.0.0/16

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.0.0/24


    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.0.2.0/24


Resources:

    MainVPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Ref EnvironmentName
            
    InternetGW:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            
    AttachInternetGateway:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGW
            VpcId: !Ref MainVPC

    PublicSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MainVPC
           # AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)


    PrivateSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MainVPC
          #  AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ1)




    NAT: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt EIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    EIP:
        Type: AWS::EC2::EIP
        DependsOn: AttachInternetGateway
        Properties: 
            Domain: vpc

    


    PrivateRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref MainVPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref MainVPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Routes


    AssociatePUBRT:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1


    
    AssociatePRIVRT:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            SubnetId: !Ref PrivateSubnet1



    PublicInternetRoute: 
        Type: AWS::EC2::Route
        DependsOn: AttachInternetGateway
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGW


    PrivateInternetOutboundRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NAT


    RoleforSSMAccess:
          Type: AWS::IAM::Role
          Properties:
            AssumeRolePolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Principal:
                    Service: ec2.amazonaws.com
                  Action:
                    - sts:AssumeRole
            Path: /
            ManagedPolicyArns:
              - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore


      
    ServerInstanceProfile:
        Type: 'AWS::IAM::InstanceProfile'
        Properties:
          Path: /
          Roles:
            - !Ref RoleforSSMAccess 
    
    
    WebServerSecGroup:
      Type: AWS::EC2::SecurityGroup
      DependsOn: MainVPC
      Properties:
        GroupDescription: Allow http to our hosts and SSH from local only
        VpcId: !Ref MainVPC
          # Fn::ImportValue:
          #   !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

    MyEC2Instance: 
      Type: AWS::EC2::Instance
      Properties: 
        InstanceType: "t3.micro" 
        ImageId: "ami-0e999cbd62129e3b1"
        IamInstanceProfile: !Ref ServerInstanceProfile
        #   - !Ref ServerInstanceProfile
        KeyName: "devops-01"
        # SecurityGroupIds:
        #   - Ref: ServerInstanceProfile
        # SsmAssociations: 
        #    - ServerInstanceProfile
        SubnetId: !Ref PrivateSubnet1     
        BlockDeviceMappings: 
        - DeviceName: "/dev/sdm"
          Ebs: 
            VolumeType: "io1"
            Iops: "200"
            DeleteOnTermination: "false"
            VolumeSize: "10"
        - DeviceName: "/dev/sdk"
          NoDevice: {}
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo apt-get update -y
            sudo apt-get install apache2 -y
            sudo systemctl start apache2.service 






Outputs: 

    VPC: 
        Description: A reference to the created VPC
        Value: !Ref MainVPC
        Export:
          Name: !Sub ${EnvironmentName}-VPCID

    VPCPublicRouteTable:
        Description: Public Routing
        Value: !Ref PublicRouteTable
        Export:
          Name: !Sub ${EnvironmentName}-PUB-RT

    VPCPrivateRouteTable1:
        Description: Private Routing AZ1
        Value: !Ref PrivateRouteTable 
        Export:
          Name: !Sub ${EnvironmentName}-PRI1-RT


    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PUB-NETS

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PRIV-NETS

    PublicSubnet1:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PUB1-SN


    PrivateSubnet1:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref PrivateSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PRI1-SN

